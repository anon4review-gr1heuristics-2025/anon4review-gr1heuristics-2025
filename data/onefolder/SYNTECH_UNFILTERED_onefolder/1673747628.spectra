import "./imports/DwyerPatterns.spectra"

spec CatchingIntruder
define D := 7;
type Dim = Int(0..D);

sys Dim robotX0;
sys Dim robotY0;
sys Dim robotX1;
sys Dim robotY1;

env Dim intruderX;
env Dim intruderY;

define staticObstaclesY := 1;

gar ini robotX0 = 0 and robotY0 = 0 and robotX1 = 7 and robotY1 = 0;

gar S_precedes_to_P_globally(robotX0 = 0 and robotY0 = 7, !(robotX1 = 7 and robotY1 = 0));

predicate moveDist(Dim pos):
  pos+1 = next(pos) |
  pos-1 = next(pos);

predicate stayDist(Dim pos):
  pos   = next(pos);

gar robotsMoveLegally:
  alw ((moveDist(robotX0) and stayDist(robotY0)) or
       (stayDist(robotX0) and moveDist(robotY0)) or
       (stayDist(robotX0) and stayDist(robotY0)))
      and
      ((moveDist(robotX1) and stayDist(robotY1)) or
       (stayDist(robotX1) and moveDist(robotY1)) or
       (stayDist(robotX1) and stayDist(robotY1)));