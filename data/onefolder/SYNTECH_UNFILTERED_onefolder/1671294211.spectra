/* 3- robot  
 */
import "./imports/DwyerPatterns.spectra"

spec Deliveries

define DX := 5;
define DY := 5;

type DimX = Int(0..DX);
type DimY = Int(0..DY);
type Coord = Int(0..DY);

sys DimX robotX0;
sys DimY robotY0;
sys DimX robotX1;
sys DimY robotY1;

env DimY elevatorY;
define elevatorX := 0;

predicate moveDistX(DimX pos):
  pos+1 = next(pos) |
  pos   = next(pos) |
  pos-1 = next(pos);     


env DimX lamp0X;
env DimY lamp0Y;
env DimX lamp1X;
env DimY lamp1Y;


// feature 3 - robots
gar ini robotY0 = 0 & robotY1 = 0;

gar alw !(robotX0 = robotX1 & robotY0 = robotY1);  
gar alw moveDistX(robotX0); 
gar alw moveDistX(robotX1); 


//A robot may enter or exit the elevator only when it is on the same floor as the robot. 
gar alw next(elevatorY) != robotY0 -> next(robotX0) != 0;
gar alw next(elevatorY) != robotY1 -> next(robotX1) != 0;

gar alw robotX0 = 0 -> (next(robotY0) = next(elevatorY) | next(robotX0) != 0);
gar alw robotX1 = 0 -> (next(robotY1) = next(elevatorY) | next(robotX1) != 0);

gar alw robotX0 = 0 -> robotY0 = elevatorY;
gar alw robotX1 = 0 -> robotY1 = elevatorY;


//Every request for a package must eventually result in the delivery of the correct package (A or B) by the correct robot (A or B). 
gar alwEv robotX0 = lamp0X & robotY0 = lamp0Y;
gar alwEv robotX1 = lamp1X & robotY1 = lamp1Y; 






