import "./imports/DwyerPatterns.spectra"

spec Deliveries

define DX := 5;
define DY := 5;

type DimX = Int(0..DX);
type DimY = Int(0..DY);
type Coord = Int(0..DY);

sys DimX robotX0;
sys DimY robotY0;
sys DimX robotX1;
sys DimY robotY1;

env DimY elevatorY;
define elevatorX := 0;

env DimX lamp0X;
env DimY lamp0Y;
env DimX lamp1X;
env DimY lamp1Y;


predicate moveDistY(DimY pos):
  pos+1 = next(pos) |
  pos   = next(pos) |
  pos-1 = next(pos);  
  

predicate moveDistX(DimX pos):
  pos+1 = next(pos) |
  pos   = next(pos) |
  pos-1 = next(pos);   
  
predicate moveDistElevator(DimY pos):
  pos+1 = next(pos) |
  pos-1 = next(pos); 
 
gar alw moveDistX(robotX0); 
gar alw moveDistX(robotX1); 

//req 0- lamp never on elevator 

asm alw lamp1X != 0;
asm alw lamp0X != 0;
 
//req1
asm alw lamp1Y != 5;
asm alw lamp0Y != 5;

//req2

//req 3-When the correct robot arrives at the room, the lamp icon disappears and pops up somewhere else, but not on the ground floor
asm alw (lamp0X = robotX0 & lamp0Y = robotY0) -> (next(lamp0Y) != lamp0Y) & (next(lamp0Y) != 0);
asm alw (lamp1X = robotX1 & lamp1Y = robotY1) -> (next(lamp1Y) != lamp1Y) & (next(lamp1Y) != 0);

//req 4- Every request for a package must eventually result in the delivery of the correct package (A or B) by the correct robot (A or B). 
gar alwEv robotX0 = lamp0X & robotY0 = lamp0Y;
gar alwEv robotX1 = lamp1X & robotY1 = lamp1Y; 

//req 5

//To travel between floors, the robots must use an elevator. The elevator is the only way to travel between floors. A robot may enter or exit the elevator.
gar alw robotX0 = 0 -> (next(robotY0) = next(elevatorY) | next(robotX0) != 0);
gar alw robotX1 = 0 -> (next(robotY1) = next(elevatorY) | next(robotX1) != 0);

//A robot may enter or exit the elevator only when it is on the same floor as the robot. 
gar alw next(elevatorY) != robotY0 -> next(robotX0) != 0;
gar alw next(elevatorY) != robotY1 -> next(robotX1) != 0;


gar alw robotX0 != 0 -> next(robotY0) = robotY0;
gar alw robotX1 != 0 -> next(robotY1) = robotY1;


//req 6

//Elevator visits the ground floor and the top floor infinitely many times
asm alwEv elevatorY = 0;
asm alwEv elevatorY = 5; 

//The elevator moves just one floor up or down in every step
asm alw moveDistElevator(elevatorY);

//When a robot is in the elevator, it moves with the elevator. 
gar alw robotX0 = 0 -> robotY0 = elevatorY;
gar alw robotX1 = 0 -> robotY1 = elevatorY;

//At most one robot can use the elevator at the same time
gar alw robotX0 = 0 -> robotX1 != 0;
gar alw robotX1 = 0 -> robotX0 != 0;





