
import "./imports/DwyerPatterns.spectra"

spec Deliveries

define DX := 5;
define DY := 5;

type DimX = Int(0..DX);
type DimY = Int(0..DY);
type Coord = Int(0..DY);

sys DimX robotX0;
sys DimY robotY0;
sys DimX robotX1;
sys DimY robotY1;

//feature 1- elevator

env DimY elevatorY;
define elevatorX := 0;

predicate moveDistY(DimY pos):
  pos+1 = next(pos) |
  pos   = next(pos) |
  pos-1 = next(pos);  
  

predicate moveDistX(DimX pos):
  pos+1 = next(pos) |
  pos   = next(pos) |
  pos-1 = next(pos);     

   

asm alw moveDistY(elevatorY);

//Elevator visits the ground floor and the top floor infinitely many times
asm alwEv elevatorY = 0;
asm alwEv elevatorY = 5;  

//feature 2- lamps
env DimX lamp0X;
env DimY lamp0Y;
env DimX lamp1X;
env DimY lamp1Y;

// rooms on the the ground floor never ask for a package 
asm alw lamp1Y != 0;
asm alw lamp0Y != 0;

// Lamps don't move until the correct robot picks them up 
asm alw !(lamp0X = robotX0 & lamp0Y = robotY0) -> lamp0X = next(lamp0X) & lamp0Y = next(lamp0Y);
asm alw !(lamp1X = robotX1 & lamp1Y = robotY1) -> lamp1X = next(lamp1X) & lamp1Y = next(lamp1Y);


// Lamps don't move until the correct robot picks them up 
asm alw (lamp0X = robotX0 & lamp0Y = robotY0) -> lamp0Y != next(lamp0Y);
asm alw (lamp1X = robotX1 & lamp1Y = robotY1) -> lamp1Y != next(lamp1Y);



// feature 3 - robots


gar ini robotY0 = 0 & robotY1 = 0;

gar alw !(robotX0 = robotX1 & robotY0 = robotY1);  
gar alw moveDistX(robotX0); 
gar alw moveDistX(robotX1); 


//A robot may enter or exit the elevator only when it is on the same floor as the robot. 
gar alw next(elevatorY) != robotY0 -> next(robotX0) = 0;
//gar alw next(elevatorY) != robotY1 -> next(robotX1) = 0;
gar alw robotX0 = 0 -> next(robotY0) = next(elevatorY);
gar alw robotX1 = 0 -> next(robotY1) = next(elevatorY);

//Every request for a package must eventually result in the delivery of the correct package (A or B) by the correct robot (A or B). 
//asm alwEv robotX0 = lamp0X & robotY0 = lamp0Y;
//asm alwEv robotX1 = lamp1X & robotY1 = lamp1Y; 






 
 
